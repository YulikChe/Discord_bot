import discord
from data import data
import datetime
import asyncio
from discord.ext import commands
import re
import random

TOKEN = 'TOKEN'

bot = commands.Bot(command_prefix='/') #–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '/'

#–∂–∞–ª–æ–±–∞
@bot.command(pass_context=True)
async def compl(ctx, member: discord.Member, *args):
    reason = ""
    for i in args:
        reason += i + " "

    await ctx.channel.purge(limit=1)
    await ctx.send("–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–±—Ä–æ–±–æ—Ç–∫—É!")
    print("–ú–∏–ª–æ—Ä–¥! " + str(ctx.author) + "–ø–æ–¥–∞–ª –∂–∞–ª–æ–±—É –Ω–∞ " + str(member) + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ " + reason + "!")

    answer = input()
    if answer == "Y":
        await ctx.send("–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞!")
        with open("compls.txt", "r+") as f:
            text = f.read()

            pattern = str(member) + " had compl"
            rec2 = re.findall(pattern, text)
            person_compl = len(rec2) + 1
            if person_compl < 3:
                await member.send("–ó–¥—Ä–∞—Å—Ç–µ, –Ω–∞ –≤–∞—Å –ø–æ–¥–∞–ª–∏ –∂–∞–ª–æ–±—É –Ω–∞ Yulik_cheServ —Å —Ç–∞–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º: " + reason + "! –ü–æ–µ—Ç–æ–º—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –ï—â—ë " + str(3-person_compl) + " –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –±–∞–Ω!")

                f.write(str(member) + " had compl\n")
            if person_compl == 3:
                await member.send("–ó–¥—Ä–∞—Å—Ç–µ, –Ω–∞ –≤–∞—Å –ø–æ–¥–∞–ª–∏ –∂–∞–ª–æ–±—É –Ω–∞ Yulik_cheServ —Å —Ç–∞–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º: " + reason + "! –≠—Ç–æ —Ç—Ä–µ—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!")

                f.write(str(member) + " had ban\n")

                await ctx.send("–ë–∞–Ω–∏–º!")
                await member.ban(reason="3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
                emb = discord.Embed(title='–ó–∞–±–∞–Ω–µ–Ω! :thumbsup:', colour=discord.Color.red())
                emb.set_author(name=member.name, icon_url=member.avatar_url)
                emb.set_footer(text="–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞: –ø–æ–ª—É—á–∏–ª 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è", icon_url=bot.user.avatar_url)

                await ctx.send(emb)

    if answer == "N":
        await ctx.send("–ñ–∞–ª–æ–±–∞ –Ω–µ –ø—Ä–∏–Ω—è—Ç–∞!")

#Connected
@bot.event
async def on_ready():
    print("BOT connected")
    await bot.change_presence(status=discord.Status.online, activity=discord.Game('/Info'))


#–≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏
@bot.event
async def on_member_join(member):
    channel = bot.get_channel(712302372830838834)
    role = discord.utils.get(member.guild.roles, id=708666321910628402)

    await member.add_roles(role)
    await channel.send("–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è " + member.name + " —Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É! –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞!")

#–µ—Å–ª–∏ —á–µ–ª —É—à—ë–ª
@bot.event
async def on_member_remove(member):
    channel = bot.get_channel(691916930864644096)
    await channel.send(str(member) + " –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç")

#–Ω–∞–∂–∞—Ç–∏–µ
#@bot.event
#async def on_typing(ctx, member, time):
#    role = discord.utils.get(member.guild.roles, id=716670048303054891)
#    if int(time.hour) == 23:
#        await member.add_roles(role)
#        await ctx.send(f"{member.mention}–ù—É –∏ —á–µ –Ω–µ —Å–ø–∏—à—å? –ò –¥–∞ —ç—Ç–æ –ø–∞—Å—Ö–∞–ª–∫–∞! –¢—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é —Ä–æ–ª—å!")

#golosovalka
@bot.event
async def on_raw_reaction_remove(payLoad):
    with open('ID_GOLOSOVALKI', "r+") as f:
        message_id_need_for_golos = f.read()

    channel = bot.get_channel(payLoad.channel_id)
    message = await channel.fetch_message(payLoad.message_id)
    member = discord.utils.get(message.guild.members, id=payLoad.user_id)
    emoji = str(payLoad.emoji.name)
    emoji2 = ""
    if emoji == "üëç":
        emoji2 = "+"
    if emoji == "üëé":
        emoji2 = "-"

    if message.id == int(message_id_need_for_golos):
        with open("GOLOSA_GOLOSOVALKI", "r+") as f:
            gg = f.read()
        gg2 = gg.split(str(member) + " had golos " + str(emoji2))
        gg3 = ''
        for i in gg2:
            gg3 = f"{str(gg3)}{str(i)}"
        with open("GOLOSA_GOLOSOVALKI", "w") as f:
            f.write(gg3)


#ssp and golosovalka
@bot.event
async def on_raw_reaction_add(payLoad): #0 - stone, 1 - scissors, 2 - paper
    with open('ID_GOLOSOVALKI', "r+") as f:
        message_id_need_for_golos = f.read()

    p_bet = 3
    comp_bet = random.randint(0, 2)
    channel = bot.get_channel(payLoad.channel_id)
    message = await channel.fetch_message(payLoad.message_id)
    member = discord.utils.get(message.guild.members, id=payLoad.user_id)
    emoji = str(payLoad.emoji.name)
    #–¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–ª–∫–∏
    if str(message.id) == message_id_need_for_golos:
        pattern = str(member) + " had golos"
        if emoji == "üëç" or emoji == "üëé":
            with open('GOLOSA_GOLOSOVALKI', "r+") as gg1:
                ggg = gg1.read()
                rec2 = re.findall(pattern, ggg)
                golosa_member = len(rec2)
                if golosa_member < 1:
                    if emoji == "üëç":
                        gg1.write(f"{member} had golos +")
                    if emoji == "üëé":
                        gg1.write(f"{member} had golos -")
                else:
                    await message.remove_reaction(payLoad.emoji, member)
        else:
            await message.remove_reaction(payLoad.emoji, member)


    if str(message.author) == "TESTBOT#1119":
        if emoji == "stone":
            p_bet = 0
        elif emoji == "scissors":
            p_bet = 1
        elif emoji == "paper":
            p_bet = 2

        if comp_bet == 0:#–µ—Å–ª–∏ —É –±–æ—Ç–∞ –∫–∞–º–µ–Ω—å
            if p_bet == 0:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –≠—Ç–æ –Ω–∏—á—å—è!")
            elif p_bet == 1:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü–∏. –Ø –≤—ã–∏–≥—Ä–∞–ª!")
            elif p_bet == 2:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –¢—ã –≤—ã–∏–≥—Ä–∞–ª!")

        elif comp_bet == 1:#–µ—Å–ª–∏ —É –±–æ—Ç–∞ –Ω–æ–∂–Ω–∏—Ü–∏
            if p_bet == 0:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü—ã. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –¢—ã –≤—ã–∏–≥—Ä–∞–ª!")
            elif p_bet == 1:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü—ã. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü–∏. –≠—Ç–æ –Ω–∏—á—å—è!")
            elif p_bet == 2:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü—ã. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –Ø –≤—ã–∏–≥—Ä–∞–ª!")

        elif comp_bet == 2:#–µ—Å–ª–∏ —É –±–æ—Ç–∞ –±—É–º–∞–≥–∞
            if p_bet == 0:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –∫–∞–º–µ–Ω—å. –Ø –≤—ã–∏–≥—Ä–∞–ª!")
            elif p_bet == 1:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –Ω–æ–∂–Ω–∏—Ü–∏. –¢—ã –≤—ã–∏–≥—Ä–∞–ª!")
            elif p_bet == 2:
                await channel.send(f"{member.mention}–ú–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞: –±—É–º–∞–≥–∞. –≠—Ç–æ –Ω–∏—á—å—è!")


#–ø—Ä–æ –º–æ–π –≤–∏–¥–æ—Å
@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def YT(ctx, url):
    await ctx.channel.purge(limit=1)
    channel = bot.get_channel(716319427506733127)
    await channel.send("–ù–∞ –∫–∞–Ω–∞–ª–µ –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è(Yulik_che) –≤—ã—à—ë–ª –≤–∏–¥–æ—Å! " + str(url) + " –ù–µ –∑–∞–±—É–¥—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å!:thumbsup:")


#say
@bot.command(pass_context=True) #—Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∞–≥—Ä—É–º–µ–Ω—Ç—ã
async def say(ctx, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    say = ""
    for i in args:
        say += i + " "
    await ctx.send(say) #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç

#ban
@bot.command(pass_context=True)
async def ban(ctx, member: discord.Member, *args):
    arg2 = ""
    for i in args:
        arg2 += i + " "

    await ctx.send("–ó–∞–ø—Ä–æ—Å –Ω–∞ –±–∞–Ω " + str(member) + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ " + arg2 + " –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    print("–ú–∏–ª–æ—Ä–¥! –ù–∞—Ä–æ–¥ —Ö–æ—á–µ—Ç –±–∞–Ω–∞ " + str(member) + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ " + arg2 + "!")
    print("–°–æ–≥–ª–∞—Å–Ω—ã?")
    answer = input()
    if answer == "Y":
        await ctx.send("–ë–∞–Ω–∏–º!")
        await member.ban(reason=arg2)
        emb = discord.Embed(title='–ó–∞–±–∞–Ω–µ–Ω! :thumbsup:', colour=discord.Color.red())
        emb.set_author(name=member.name, icon_url=member.avatar_url)
        emb.set_footer(text="–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞: " + arg2, icon_url=bot.user.avatar_url)

        await ctx.send(embed=emb)
    if answer == "N":
        await ctx.send("–ù–µ –±–∞–Ω–∏–º!")

        emb = discord.Embed(title='–ù–µ –∑–∞–±–∞–Ω–µ–Ω!', colour=discord.Color.green())

        emb.set_author(name=member.name, icon_url=member.avatar_url)
        emb.set_footer(text="–£–∫–∞–∑–∞–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –¥–ª—è –±–∞–Ω–∞: " + arg2, icon_url=bot.user.avatar_url)

        await ctx.send(embed=emb)

#unban
@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def unban(ctx, userr):
    banned_users = await ctx.guild.bans()
    for ban_entry in banned_users:
        user = ban_entry.user
        if userr == str(user):
            await ctx.guild.unban(user)
            emb = discord.Embed(title='–†–∞–∑–±–∞–Ω–µ–Ω! :thumbsup:', colour=discord.Color.green())

            emb.set_author(name=user.name, icon_url=user.avatar_url)
            await ctx.send(embed=emb)


#clear
@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def clear(ctx, amount=1000000000000000000000000000):
    await ctx.channel.purge(limit=amount)

#kick
@bot.command(pass_context=True)
async def kick(ctx, member: discord.Member, *args):
    arg2 = ""
    for i in args:
        arg2 += i + " "

    await ctx.send("–ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–∏–∫ " + str(member) + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ " + arg2 + " –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    print("–ú–∏–ª–æ—Ä–¥! –ù–∞—Ä–æ–¥ —Ö–æ—á–µ—Ç –∫–∏–∫–∞ " + str(member) + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ " + arg2 + "!")
    print("–°–æ–≥–ª–∞—Å–Ω—ã?")
    answer = input()
    if answer == "Y":
        await ctx.send("–ö–∏–∫–∞–µ–º!")
        await member.kick(reason=arg2)
        emb = discord.Embed(title='–ö–∏–∫–Ω—É—Ç! :thumbsup:', colour=discord.Color.red())
        emb.set_author(name=member.name, icon_url=member.avatar_url)
        emb.set_footer(text="–ü—Ä–∏—á–∏–Ω–∞ –∫–∏–∫–∞: " + arg2, icon_url=bot.user.avatar_url)

        await ctx.send(embed=emb)
    if answer == "N":
        await ctx.send("–ù–µ –∫–∏–∫–∞–µ–º!")

        emb = discord.Embed(title='–ù–µ –∫–∏–∫–Ω—É—Ç!', colour=discord.Color.green())

        emb.set_author(name=member.name, icon_url=member.avatar_url)
        emb.set_footer(text="–£–∫–∞–∑–∞–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –¥–ª—è –∫–∏–∫–∞: " + arg2, icon_url=bot.user.avatar_url)

        await ctx.send(embed=emb)

#Info
@bot.command(pass_context=True)
async def Info(ctx):
    await ctx.send("–Ø –±–æ—Ç Yulik_che! –ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å /, –Ø –º–æ–≥—É –≤–æ—Ç —á—Ç–æ:"
                   "\n1. /say (—á—Ç–æ-—Ç–æ) –ø–æ–≤—Ç–æ—Ä—é —Ç–æ —á—Ç–æ –≤—ã –∑–¥–µ—Å—å –Ω–∞–ø–∏—à–µ—Ç–µ"
                   "\n2. /ban (–∫—Ç–æ) (–∑–∞ —á—Ç–æ) –æ—Ç–ø—Ä–∞–≤–ª—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–∞–Ω"
                   "\n3. /Haha –æ—Ç–ø—Ä–∞–≤–ª—é —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç –∏–∑ –∞—Ä—Ö–∏–≤–∞"
                   "\n4. /Add_haha (–∞–Ω–µ–∫–¥–æ—Ç) –æ—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞"
                   "\n5. /kick (–∫–æ–≥–æ) (–∑–∞ —á—Ç–æ) –æ—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–∏–∫"
                   "\n6. /compl (–∫–æ–≥–æ)(–∑–∞ —á—Ç–æ) –æ—Ç–ø—Ä–∞–≤–ª—é –∂–∞–ª–æ–±—É")

#Haha
@bot.command(pass_context=True)
async def Haha(ctx):
    await ctx.send(data["anekdots"][random.randint(0, len(data["anekdots"]) - 1)])


#–≥–æ–ª–æ—Å–æ–≤–∞–ª–∫–∞
@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def goloso(ctx, hour, minute, *args):
    await ctx.channel.purge(limit=1)
    text = ""
    for i in args:
        text += i + " "

    emb = discord.Embed(title=text, colour=discord.Color.gold())
    emb.set_author(name=ctx.message.author.name, icon_url=ctx.message.author.avatar_url)
    emb.set_footer(text="üëç - –¥–∞, üëé - –Ω–µ—Ç\n"
                        "–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–æ " + hour + ":" + minute)
    await ctx.send(embed=emb)
    with open("ID_GOLOSOVALKI", "w") as f:
        f.write(str(ctx.channel.last_message_id))

    with open("GOLOSA_GOLOSOVALKI", "w") as f:
        pass

    #time = datetime.time(hour=int(hour), minute=int(minute))

    #while not bot.is_closed:
    #    print("test")
    #    if datetime.datetime.now().time().hour == time.hour:
    #        await ctx.send("test")
    #        break


#–¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç
@bot.command(pass_context=True)
async def Add_haha(ctx, *args):
    await ctx.send("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    an = ""
    for i in args:
        an += i + " "
    print("–ú–∏–ª–æ—Ä–¥ –Ω–∞—Ä–æ–¥ —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç:" + an + "–î–æ–±–∞–≤–ª—è—Ç—å?")
    answer = input()
    if answer == "Y":
        data["anekdots"].append(an)
        await ctx.send("–î–æ–±–∞–≤–ª–µ–Ω–Ω–æ! :thumbsup:")
    if answer == "N":
        await ctx.send("–ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")

#K–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞
@bot.command(pass_context=True)
async def ssp(ctx):
    await ctx.send("–û–∫! –°—Ç–∞–≤—å —Å—Ç–∞–≤–∫—É!")


#@commands.has_permissions(administrator=True)
#@bot.command(pass_context=True)
#async def rainbow(ctx):
#    colors = [124252, 5020550, 250154, 139, 1783434, 2552555, 255215, 25569, 2525112, 191255, 3413934]
#    server = ctx.guild
#    role = discord.utils.get(server.roles, name='–õ—é–±–∏—Ç–µ–ª—å –ø–æ—Å—Ö–∞–ª–æ—á–µ–∫üï∂Ô∏è')
#    while True:
#        for i in colors:
#            await role.edit(color=discord.Colour(i))
#            await asyncio.sleep(0.1)

@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def PMaf(ctx, *args):
    members = args
    members2 = []
    for i in members:
        members2.append(discord.utils.get(ctx.message.guild.members, name=i))
    member_len = len(members)
    roles = []
    maf = False     #–º–∞—Ñ–∏—è –µ—Å—Ç—å –ª–∏
    dma = False     #–¥–æ–Ω –µ—Å—Ç—å –ª–∏
    kom = False     #–∫–æ–º–∏—Å–∞—Ä –µ—Å—Ç—å –ª–∏
    doc = False     #–¥–æ–∫ –µ—Å—Ç—å –ª–∏

    await MafAlgo(member_len, roles, maf, dma, kom, doc, 1)

    for i in range(0, member_len):
        await members2[i].send("–¢–≤–æ—è —Ä–æ–ª—å: " + roles[i])

async def MafAlgo(member_len, roles, maf, dma, kom, doc, couter):
    if couter <= member_len+1:
        if couter <= member_len:
            rand = random.randint(1, member_len)
            if rand == 1:
                if maf == False:
                    roles.append("–º–∞—Ñ–∏—è")
                    maf2 = True
                    await MafAlgo(member_len, roles, maf2, dma, kom, doc, couter + 1)
                else:
                    await MafAlgo(member_len, roles, maf, dma, kom, doc, couter)
            elif rand == 2:
                if dma == False:
                    roles.append("–¥–æ–Ω–º–∞—Ñ–∏—è")
                    dma2 = True
                    await MafAlgo(member_len, roles, maf, dma2, kom, doc, couter + 1)
                else:
                    await MafAlgo(member_len, roles, maf, dma, kom, doc, couter)
            elif rand == 3:
                if kom == False:
                    roles.append("–∫–æ–º–∏—Å–∞—Ä")
                    kom2 = True
                    await MafAlgo(member_len, roles, maf, dma, kom2, doc, couter + 1)
                else:
                    await MafAlgo(member_len, roles, maf, dma, kom, doc, couter)
            elif rand == 4:
                if doc == False:
                    roles.append("–¥–æ–∫")
                    doc2 = True
                    await MafAlgo(member_len, roles, maf, dma, kom, doc2, couter + 1)
                else:
                    await MafAlgo(member_len, roles, maf, dma, kom, doc, couter)
            else:
                roles.append("–º–∏—Ä–Ω—ã–π")
                await MafAlgo(member_len, roles, maf, dma, kom, doc, couter + 1)
        else:
            await sglagivanie_bagov_maf(member_len, roles, maf, dma, kom, doc)

async def sglagivanie_bagov_maf(len, roles, maf, dma, kom, doc):
    if maf == False:
        rand = random.randint(0, len-1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–º–∞—Ñ–∏—è"
        else:
            await sglagivanie_bagov_maf(len, roles, maf, dma, kom, doc)
    if dma == False:
        rand = random.randint(0, len - 1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–¥–æ–Ω–º–∞—Ñ–∏—è"
        else:
            await sglagivanie_bagov_maf(len, roles, maf, dma, kom, doc)
    if kom == False:
        rand = random.randint(0, len - 1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–∫–æ–º–∏—Å–∞—Ä"
        else:
            await sglagivanie_bagov_maf(len, roles, maf, dma, kom, doc)
    if doc == False:
        rand = random.randint(0, len-1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–¥–æ–∫"
        else:
            await sglagivanie_bagov_maf(len, roles, maf, dma, kom, doc)

@commands.has_permissions(administrator=True)
@bot.command(pass_context=True)
async def PMaf2(ctx, *args):
    members = args
    members2 = []
    for i in members:
        members2.append(discord.utils.get(ctx.message.guild.members, name=i))
    member_len = len(members)
    roles = []
    maf = False     #–º–∞—Ñ–∏—è –µ—Å—Ç—å –ª–∏
    dma = False     #–¥–æ–Ω –µ—Å—Ç—å –ª–∏
    doc = False     #doc –µ—Å—Ç—å –ª–∏

    await MafAlgo2(member_len, roles, maf, dma, doc, 1)

    for i in range(0, member_len):
        await members2[i].send("–¢–≤–æ—è —Ä–æ–ª—å: " + roles[i])

async def MafAlgo2(member_len, roles, maf, dma, doc, couter):
    if couter <= member_len+1:
        if couter <= member_len:
            rand = random.randint(1, member_len)
            if rand == 1:
                if maf == False:
                    roles.append("–º–∞—Ñ–∏—è")
                    maf2 = True
                    await MafAlgo2(member_len, roles, maf2, dma, doc, couter + 1)
                else:
                    await MafAlgo2(member_len, roles, maf, dma, doc, couter)
            elif rand == 2:
                if dma == False:
                    roles.append("–¥–æ–Ω–º–∞—Ñ–∏—è")
                    dma2 = True
                    await MafAlgo2(member_len, roles, maf, dma2, doc, couter + 1)
                else:
                    await MafAlgo2(member_len, roles, maf, dma, doc, couter)
            elif rand == 3:
                if doc == False:
                    roles.append("–¥–æ–∫—Ç–æ—Ä")
                    doc2 = True
                    await MafAlgo2(member_len, roles, maf, dma, doc2, couter + 1)
                else:
                    await MafAlgo2(member_len, roles, maf, dma, doc, couter)
            else:
                roles.append("–º–∏—Ä–Ω—ã–π")
                await MafAlgo2(member_len, roles, maf, dma, doc, couter + 1)
        else:
            await sglagivanie_bagov_maf2(member_len, roles, maf, dma, doc)

async def sglagivanie_bagov_maf2(len, roles, maf, dma, doc):
    if maf == False:
        rand = random.randint(0, len-1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–º–∞—Ñ–∏—è"
        else:
            await sglagivanie_bagov_maf2(len, roles, maf, dma, doc)
    if dma == False:
        rand = random.randint(0, len - 1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–¥–æ–Ω–º–∞—Ñ–∏—è"
        else:
            await sglagivanie_bagov_maf2(len, roles, maf, dma, doc)
    if doc == False:
        rand = random.randint(0, len - 1)
        if roles[rand] == "–º–∏—Ä–Ω—ã–π":
            roles[rand] = "–¥–æ–∫–æ—Ä"
        else:
            await sglagivanie_bagov_maf2(len, roles, maf, dma, doc)

bot.run(TOKEN)